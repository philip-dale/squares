"use strict";(self["webpackChunksquares"]=self["webpackChunksquares"]||[]).push([[851],{2498:function(e,t,a){a.r(t),a.d(t,{default:function(){return C}});var l=a(6768);function s(e,t,a,s,n,o){const g=(0,l.g2)("v-btn"),i=(0,l.g2)("v-select"),r=(0,l.g2)("v-checkbox-btn"),h=(0,l.g2)("OkCancelDialog");return(0,l.uX)(),(0,l.CE)(l.FK,null,[(0,l.Lk)("div",null,[t[15]||(t[15]=(0,l.Lk)("div",{class:"settings"},[(0,l.Lk)("h1",null,"Game Settings Page")],-1)),(0,l.bF)(g,{onClick:t[0]||(t[0]=e=>o.restartGameRequest()),color:o.darkMode?"grey-darken-2":"gray"},{default:(0,l.k6)((()=>t[14]||(t[14]=[(0,l.eW)("Restart Game")]))),_:1},8,["color"]),(0,l.bF)(i,{label:"Select Game Mode",items:o.gameTypes,modelValue:o.gameType,"onUpdate:modelValue":t[1]||(t[1]=e=>o.gameType=e),color:o.darkMode?"grey-darken-2":"gray"},null,8,["items","modelValue","color"]),(0,l.bF)(i,{label:"Select Level",items:Object.keys(this.settings.getGameLevels),modelValue:o.currentLevel,"onUpdate:modelValue":t[2]||(t[2]=e=>o.currentLevel=e),color:o.darkMode?"grey-darken-2":"gray",disabled:this.disableLevelSelect},null,8,["items","modelValue","color","disabled"]),(0,l.bF)(i,{label:"Select Challenge",items:o.challenges,modelValue:o.challenge,"onUpdate:modelValue":t[3]||(t[3]=e=>o.challenge=e),color:o.darkMode?"grey-darken-2":"gray",disabled:"challenge"!=this.gameType},null,8,["items","modelValue","color","disabled"]),(0,l.bF)(r,{modelValue:o.darkMode,"onUpdate:modelValue":t[4]||(t[4]=e=>o.darkMode=e),label:"Dark Mode"},null,8,["modelValue"]),(0,l.bF)(r,{modelValue:o.showWelcome,"onUpdate:modelValue":t[5]||(t[5]=e=>o.showWelcome=e),label:"Show Welcome Screen"},null,8,["modelValue"])]),(0,l.bF)(h,{title:"Restart Game",message:"All progress will be cleared if you restart the game",okText:"Restart Game",showDialog:this.restartDialogState,onOkBtn:t[6]||(t[6]=e=>{this.restartDialogState=!1,o.restartGame()}),onCancelBtn:t[7]||(t[7]=e=>this.restartDialogState=!1)},null,8,["showDialog"]),(0,l.bF)(h,{title:"Change Game Mode",message:"All progress will be cleared if you change the game mode",okText:"Change Game Mode",showDialog:this.changeGameDialogState,onOkBtn:t[8]||(t[8]=e=>{this.changeGameDialogState=!1,o.changeMode()}),onCancelBtn:t[9]||(t[9]=e=>this.changeGameDialogState=!1)},null,8,["showDialog"]),(0,l.bF)(h,{title:"Change Level",message:"All progress will be cleared if you change the level",okText:"Change Level",showDialog:this.changeLevelDialogState,onOkBtn:t[10]||(t[10]=e=>{this.changeLevelDialogState=!1,o.changeLevel()}),onCancelBtn:t[11]||(t[11]=e=>this.changeLevelDialogState=!1)},null,8,["showDialog"]),(0,l.bF)(h,{title:"Change Challenge",message:"All progress will be cleared if you change the Challenge",okText:"Change Challenge",showDialog:this.changeChallengeDialogState,onOkBtn:t[12]||(t[12]=e=>{this.changeChallengeDialogState=!1,o.changeChallenge()}),onCancelBtn:t[13]||(t[13]=e=>this.changeChallengeDialogState=!1)},null,8,["showDialog"])],64)}var n=a(3788),o=a(3041),g=a(8845),i=a(4232);const r={class:"dialogWrapper"},h={class:"dialogContent"},d={class:"dialogTitle"},c={class:"dialogActions"};function m(e,t,a,s,n,o){const g=(0,l.g2)("v-btn"),m=(0,l.g2)("GDialog");return(0,l.uX)(),(0,l.Wv)(m,{modelValue:o.showDialogState,"onUpdate:modelValue":t[2]||(t[2]=e=>o.showDialogState=e),width:"350px",persistent:"",local:""},{default:(0,l.k6)((()=>[(0,l.Lk)("div",r,[(0,l.Lk)("div",h,[(0,l.Lk)("div",d,(0,i.v_)(this.title),1),(0,l.eW)(" "+(0,i.v_)(this.message),1)]),(0,l.Lk)("div",c,[(0,l.bF)(g,{class:"dialogBtn",onClick:t[0]||(t[0]=t=>e.$emit("okBtn"))},{default:(0,l.k6)((()=>[(0,l.eW)((0,i.v_)(this.okText),1)])),_:1}),(0,l.bF)(g,{class:"dialogBtn",onClick:t[1]||(t[1]=t=>e.$emit("cancelBtn"))},{default:(0,l.k6)((()=>t[3]||(t[3]=[(0,l.eW)("Cancel")]))),_:1})])])])),_:1},8,["modelValue"])}var u={name:"OkCancelDialog",props:{title:{type:String,default:"title"},message:{type:String,default:"message"},okText:{type:String,default:"Ok"},showDialog:{type:Boolean,default:!1}},setup(){const e=(0,o.d)();return{settings:e}},computed:{showDialogState:{get(){return this.showDialog}}}},k=a(1241);const p=(0,k.A)(u,[["render",m],["__scopeId","data-v-93c94676"]]);var S=p,v={name:"GameSettings",components:{OkCancelDialog:S},data:()=>({restartDialogState:!1,changeGameDialogState:!1,changeLevelDialogState:!1,changeChallengeDialogState:!1,requestedGameType:null,requestedLevel:null,requestedChallenge:null}),setup(){const e=(0,n.F)(),t=(0,o.d)(),a=(0,g.j)();return{samples:e,settings:t,gameState:a}},computed:{currentLevel:{get(){return this.gameState.getGameLevel},set(e){this.requestedLevel=e,this.changeLevelDialogState=!0}},gameType:{get(){return this.gameState.getGameType},set(e){this.requestedGameType=e,this.changeGameDialogState=!0}},darkMode:{get(){return this.settings.getDarkMode},set(e){this.settings.setDarkMode(e)}},showWelcome:{get(){return this.settings.getShowWelcome},set(e){this.settings.setShowWelcome(e)}},gameTypes(){return Object.keys(this.gameState.getGameTypes).map((e=>({title:this.gameState.getGameTypes[e].name,value:e})))},disableLevelSelect(){return"oneOfEach"!=this.gameType},challenges(){return Object.keys(this.settings.getChallenges).map((e=>({title:e+": "+this.settings.getChallenges[e].name,value:e})))},challenge:{get(){return this.gameState.getChallenge},set(e){this.requestedChallenge=e,this.changeChallengeDialogState=!0}}},methods:{restartGameRequest(){this.restartDialogState=!0},restartGame(){this.gameState.reset(),this.samples.reset()},changeMode(){this.gameState.setGameType(this.requestedGameType),this.restartGame()},changeLevel(){this.gameState.setLevel(this.requestedLevel),this.restartGame()},changeChallenge(){this.gameState.setChallenge(this.requestedChallenge),this.restartGame()}}};const D=(0,k.A)(v,[["render",s]]);var C=D}}]);
//# sourceMappingURL=Settingss.33622424.js.map